#
# wm independent hotkeys
#

# terminal emulator
alt + Return
    urxvt

# program launcher
alt + d
    SUDO_ASKPASS=~/.bin/rofisudo rofi -show run

# set colors based on a random wallpaper
alt + @Escape
    set-colors $(eval echo $(rofi -dmenu -p "set-colors arguments: "))

# set colors based on a provided wallpaper
alt + shift + @Escape
    run-programs

#
# bspwm hotkeys
#

# quit bspwm normally
alt + shift + e
    bspc quit

# close and kill
alt + {_,shift + }q
    bspc node -{c,k}

# alternate between the tiled and monocle layout
alt + m
    bspc desktop -l next

# send the newest marked node to the newest preselected node
alt + y
    bspc node newest.marked.local -n newest.!automatic.local

# swap the current node and the biggest node
alt + g
    bspc node -s biggest

#
# state/flags
#

# set the window state
alt + {t,shift + t,s,f}
    bspc node -t {tiled,pseudo_tiled,floating,fullscreen}

# set the node flags
alt + ctrl + {m,x,y,z}
    bspc node -g {marked,locked,sticky,private}

#
# focus/swap
#

# focus the node in the given direction
alt + {_,shift + }{h,j,k,l}
    bspc node -{f,s} {west,south,north,east}

# focus the node for the given path jump
alt + {p,b,comma,period}
    bspc node -f @{parent,brother,first,second}

# focus the next/previous node in the current desktop
alt + {_,shift + }c
    bspc node -f {next,prev}.local

# focus the next/previous desktop in the current monitor
alt + bracket{left,right}
    bspc desktop -f {prev,next}.local

# focus the last node/desktop
alt + {grave,Tab}
    bspc {node,desktop} -f last

# focus the older or newer node in the focus history
alt + {o,i}
    bspc wm -h off; \
    bspc node {older,newer} -f; \
    bspc wm -h on

# focus or send to the given desktop
alt + {_,shift + }{1-9,0}
    bspc {desktop -f,node -d} '^{1-9,10}'

#
# preselect
#

# preselect the direction
alt + ctrl + {h,j,k,l}
    bspc node -p {west,south,north,east}

# preselect the ratio
alt + ctrl + {1-9}
    bspc node -o 0.{1-9}

# cancel the preselection for the focused node
alt + ctrl + space
    bspc node -p cancel

# cancel the preselection for the focused desktop
alt + ctrl + shift + space
    bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

#
# move/resize
#

# expand a window by moving one of its side outward
super + alt + {h,j,k,l}
    bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# contract a window by moving one of its side inward
super + alt + shift + {h,j,k,l}
    bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# move a floating window
alt + {Left,Down,Up,Right}
    bspc node -v {-20 0,0 20,0 -20,20 0}

#
# spotify controls
#

XF86AudioNext
    exec dbus-send --print-reply \
    --dest=org.mpris.MediaPlayer2.spotify \
    /org/mpris/MediaPlayer2 \
    org.mpris.MediaPlayer2.Player.Next

XF86AudioPrev
    exec dbus-send --print-reply \
    --dest=org.mpris.MediaPlayer2.spotify \
    /org/mpris/MediaPlayer2 \
    org.mpris.MediaPlayer2.Player.Previous

XF86AudioPlay
    exec dbus-send --print-reply \
    --dest=org.mpris.MediaPlayer2.spotify \
    /org/mpris/MediaPlayer2 \
    org.mpris.MediaPlayer2.Player.PlayPause

#
# volume controls
#

XF86AudioRaiseVolume
    exec pactl set-sink-volume @DEFAULT_SINK@ +5%

XF86AudioLowerVolume
    exec pactl set-sink-volume @DEFAULT_SINK@ -5%

XF86AudioMute
    exec pactl set-sink-mute @DEFAULT_SINK@ toggle

#
# brightness controls
#

XF86MonBrightnessUp
    light -A 5    

XF86MonBrightnessDown
    light -U 5

#
# screenshot controls
#

@Print
    maim screenshot.png &&\
    xclip screenshot.png -selection clipboard -t image/png &&\
    `notify-send "Screenshot taken"`

alt + @Print
    maim -i $(xdotool getactivewindow) screenshot.png &&\
    xclip screenshot.png -selection clipboard -t image/png &&\
    `notify-send "Screenshot taken"`

ctrl + @Print
    maim -s screenshot.png &&\
    xclip screenshot.png -selection clipboard -t image/png &&\
    `notify-send "Screenshot taken"`

